
on:
  push:
    branches:
      - main

name: Deploy lambda

jobs:
  # This job will run on every code change to the master branch, but will only deploy
  # changes if the infrastructure CloudFormation template in the repository have changed.
  deploy-infrastructure:
    name: Deploy infrastructure
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Cloud Formation Linter 
      uses: scottbrenner/cfn-lint-action@v2

    - name: Run Cfn Linter.
      run: |
          cfn-lint -t ./templates/cftemplate.yml 
          cfn-lint -t ./templates/lambdasrcbucket.yml
          cfn-lint -t ./templates/rdscreate.yml -i W1011

    - name: install boto3
      run: pip install boto3

    #- name: Run python Linter
    #  uses: sunnysid3up/python-linter@master
    #  with:
    #    source: "./src"
    #    strict: "low"
    
    - name: install zip
      uses: montudor/action-zip@v1

    - name: zip output
      run: zip -qq -r ../lambda.zip lambda.py package
      working-directory: src

    - name: Copy s3 bucket template
      run: cp ./templates/lambdasrcbucket.yml .

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v5.1.0
      with:
        #aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
        aws-region: us-east-1
        role-to-assume: ${{ secrets.AWS_ACCOUNT_ID }}

    - name: Read secrets from AWS Secrets Manager into environment variables
      uses: abhilash1in/aws-secrets-manager-action@v2.1.0
      with:
        secrets: | 
          GISecret
        parse-json: true

    - name: Check if env variable is set after fetching secrets
      run: if [ -z ${GISECRET_GIDBNAME+x} ]; then echo "SECRET unset"; else echo "SECRET retrieved"; fi

    - name: Deploy Mysql
      id: rds-stack-gi
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: rds-gi1
        template: templates/rdscreate.yml
        role-arn: ${{ secrets.AWS_ACCOUNT_ID }}
        #parameter-overrides: "DBName=${GISECRET_GIDBNAME},DBUser=${GISECRET_GIDBUSER},DBPass=${GISECRET_GIDBPASS}"
        no-fail-on-empty-changeset: "1"      
        
    - name: Deploy S3 Bucket
      id: s3-bucket-stack-gi
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: lambdas3
        template: templates/lambdasrcbucket.yml
        role-arn: ${{ secrets.AWS_ACCOUNT_ID }}
        #arn:aws:iam::${{ steps.creds.outputs.aws-account-id }}:role/github-actions-cloudformation-stack-role
        no-fail-on-empty-changeset: "1"

    - name: Upload source
      run: aws s3 cp ./lambda.zip s3://gi-lambda-src-bucket


    - name: Deploy Lambda
      id: lambda-stack-gi
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: lambdagi
        template: templates/cftemplate.yml
        role-arn: ${{ secrets.AWS_ACCOUNT_ID }}
        #arn:aws:iam::${{ steps.creds.outputs.aws-account-id }}:role/github-actions-cloudformation-stack-role
        no-fail-on-empty-changeset: "1"
